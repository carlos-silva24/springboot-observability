services:
  grafana:
    container_name: grafana
    image: grafana/grafana:10.3.1
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - "7000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - springboot-observability

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus/config.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "7001:9090"
    networks:
      - springboot-observability
    depends_on:
      - ot-collector

  ot-collector:
    image: otel/opentelemetry-collector-contrib:0.94.0
    container_name: ot-collector
    deploy:
      resources:
        limits:
          memory: 125M
    command: [ "--config=/etc/otelcol-config.yaml" ]
    volumes:
      - ./open-telemetry/collector-config.yaml:/etc/otelcol-config.yaml
    ports:
      - "7002:4318"        # OTLP HTTP receiver
      - "4317"        # OTLP gRPC receiver
      - "8888"   # Prometheus metrics exposed by the collector
      - "8889"   # Prometheus exporter metrics
      - "1888"   # pprof extension
      - "13133" # health_check extension
      - "55679" # zpages extension
      - "3500:3500" # loki receiver HTTP
    networks:
      - springboot-observability
    depends_on:
      - tempo

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./grafana-tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "7003:3200"   # tempo
      - "14268"  # jaeger ingest
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    networks:
      - springboot-observability

  grafana-loki:
    image: grafana/loki:2.9.4
    container_name: grafana-loki
    command: "-config.file=/etc/loki/config.yaml"
    ports:
      - "7005:3100"
      - "7946"
    volumes:
      - ./grafana-loki/loki-config.yaml:/etc/loki/config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - springboot-observability

  grafana-promtail:
    image: grafana/promtail:2.9.4
    container_name: grafana-promtail
    volumes:
      - ./grafana-loki/promtail-local-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - ot-collector
    networks:
      - springboot-observability

#  minio:
#    image: minio/minio
#    container_name: minio
#    entrypoint:
#      - sh
#      - -euc
#      - |
#        mkdir -p /data/loki-data && \
#        mkdir -p /data/loki-ruler && \
#        minio server /data
#    environment:
#      - MINIO_ROOT_USER=loki
#      - MINIO_ROOT_PASSWORD=supersecret
#      - MINIO_PROMETHEUS_AUTH_TYPE=public
#      - MINIO_UPDATE=off
#    ports:
#      - "9000"
#    volumes:
#      - ./.data/minio:/data
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
#      interval: 15s
#      timeout: 20s
#      retries: 5
#    networks:
#      - springboot-observability

networks:
  springboot-observability:

volumes:
  pgdata:
